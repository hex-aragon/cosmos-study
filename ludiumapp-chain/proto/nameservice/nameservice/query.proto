syntax = "proto3";

package nameservice.nameservice;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "nameservice/nameservice/params.proto";
import "nameservice/nameservice/whois.proto";

option go_package = "github.com/Jeongseup/ludiumapp/x/nameservice/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nameservice/nameservice/params";
  
  }
  
  // Queries a list of Whois items.
  rpc Whois    (QueryGetWhoisRequest) returns (QueryGetWhoisResponse) {
    option (google.api.http).get = "/nameservice/nameservice/whois/{index}";
  
  }
  rpc WhoisAll (QueryAllWhoisRequest) returns (QueryAllWhoisResponse) {
    option (google.api.http).get = "/nameservice/nameservice/whois";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetWhoisRequest {
  string index = 1;
}

message QueryGetWhoisResponse {
  Whois whois = 1 [(gogoproto.nullable) = false];
}

message QueryAllWhoisRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllWhoisResponse {
  repeated Whois                                  whois      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

